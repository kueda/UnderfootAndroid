import: config.yml

sources:
    normals:
        type: Raster
        url: https://tile.nextzen.org/tilezen/terrain/v1/256/normal/{z}/{x}/{y}.png
        url_params:
            api_key: global.nextzen_api_key
        tile_size: 256
        max_zoom: 14
    elevation:
        type: MVT
        url: 'file:///data/user/0/rocks.underfoot.underfootandroid/files/contours-20200509.mbtiles'
        # For whatever reason, zoom filtering in layer filters doesn't work, but this does
        min_display_zoom: 13

layers:
    hillshade:
        data:
            source: normals
        draw:
            hillshade:
                visible: true
                order: function() { return feature.sort_rank || 0; }
    contours:
        data:
            source: elevation
            layer: contours
        hundred:
            filter: "function() { return feature.elevation % 100 == 0; }"
            draw:
                contour_labels:
                    order: 101
                    text_source: "function() { return feature.elevation + 'm'; }"
                    font:
                        fill: [0.9, 0.9, 0.9]
                        size: 9px
                        stroke:
                            width: 2px
                            color: [0.5, 0.5, 0.5]
                contours:
                    order: 100
#                    color: [0.5, 0.5, 0.5, 0.5]
                    color: [0.5, 0.5, 0.5]
                    width: 1.5px
        not_hundred:
            filter:
                function() {
                return feature.elevation % 100 != 0;
                }
            draw:
                contours:
                    order: 100
                    color: [0.5, 0.5, 0.5, 0.5]
                    width: 0.8px
styles:
    contours:
        base: lines
        lighting: false
        join: round
        blend_order: 2
    contour_labels:
        base: text
        blend_order: 1
    hillshade:
        base: polygons
        lighting: false
        raster: normal
        blend: translucent
        shaders:
            uniforms:
                u_envmap: images/draw-test10.jpg
                u_contrast: 1.
                # u_zoom_scale: 1.0
                u_zoom_scale: 3.95
                u_brightness_base: 0.5
                u_brightness_scaler: 0.5
            blocks:
                global: |
                    // Simplified view-independent environment map
                    vec4 applyEnvmap (in sampler2D _tex, in vec3 _normal, in float scale) {
                        _normal.z *= scale;
                        return texture2D(_tex, .5*(normalize(_normal).xy + 1.));
                    }
                color: |
                    // turn terrain exaggeration up/down
                    // fade out spheremap normals with a function
                    float scale1 = 20./(u_map_position.z + 1.0) + 1.5;
                    float m = u_zoom_scale * (u_map_position.z + 0.4) * exp(u_map_position.z * -.29);
                    m = clamp(m, 0., 1.5);
                    color = applyEnvmap(u_envmap, normal, 1./scale1);

                    // apply contrast and brightness
                    float contrast = m;
                    color.rgb = ((color.rgb - 0.5) * max(contrast, 0.)) + 0.5;
                    float brightness = u_brightness_base - m * u_brightness_scaler;
                    color.rgb += brightness;
                    color.a = 0.3;
