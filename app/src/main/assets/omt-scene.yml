import: config.yaml

scene:
    background:
        color: '#555'

sources:
    normals:
        type: Raster
        url: https://tile.nextzen.org/tilezen/terrain/v1/256/normal/{z}/{x}/{y}.png
        url_params:
            api_key: global.nextzen_api_key
        tile_size: 256
        max_zoom: 14
    underfoot:
        type: MVT
        url: 'file:///data/user/0/rocks.underfoot.underfootandroid/files/rocks-20200509.mbtiles'
    underfoot_ways:
        type: MVT
        url: 'file:///data/user/0/rocks.underfoot.underfootandroid/files/ways-20200509.mbtiles'
    underfoot_elevation:
        type: MVT
        url: 'file:///data/user/0/rocks.underfoot.underfootandroid/files/contours-20200509.mbtiles'
        # For whatever reason, zoom filtering in layer filters doesn't work, but this does
        min_display_zoom: 13

cameras:
    cam:
        type: flat

lights:
    dir:
        type: directional
        direction: [.1, .5, -1]
        diffuse: .7
        ambient: .5

layers:
    hillshade:
        data:
            source: normals
        draw:
            hillshade:
                visible: true
                order: function() { return feature.sort_rank || 0; }
    vectile:
        data:
            source: underfoot
            layer: rock_units
        interactive:
            draw: { geologic_units: { interactive: true } }
        draw:
            geologic_units:
                order: 0
                color:
                    [0,0,0]
                    # function() {
                    #     return [
                    #         ( feature.code || "zzz" ).charCodeAt(0) / 150,
                    #         ( feature.code || "zzz" ).charCodeAt(1) / 150,
                    #         ( feature.code || "zzz" ).charCodeAt(2) / 150,
                    #         1.0
                    #     ]
                    # }
        borders:
            filter: function() { return $zoom >= 14; }
            draw:
                geologic_unit_borders:
                    order: 1
                    color: [0,0,0,0.1]
                    width: 2px
    ways:
        data:
            source: underfoot_ways
            layer: underfoot_ways
        draw:
            lines:
                order: 101
                color: [0.314, 0.314, 0.314, 1.00]
                width: 1.2px
        highways:
            filter:
                highway: [motorway, primary, trunk]
            draw:
                lines:
                    width: 2px
        roads:
            filter:
                highway: [secondary, tertiary]
            draw:
                lines:
                    width: 1.6px
        trails:
            filter:
                highway: [path, track]
            draw:
                lines:
                    style: dashed
                    outline:
                        width: 0
    contours:
        data:
            source: underfoot_elevation
            layer: contours
        hundred:
            filter:
                function() {
                    return feature.elevation % 100 == 0;
                }
            draw:
                contours:
                    order: 100
                    color: [0.5, 0.5, 0.5, 0.5]
                    width: 1.5px
        not_hundred:
            filter:
                function() {
                    return feature.elevation % 100 != 0;
                }
            draw:
                contours:
                    order: 100
                    color: [0.5, 0.5, 0.5, 0.5]
                    width: 0.8px
styles:
    contours:
        base: lines
        blend: overlay
        lighting: false
        join: round
    dashed:
        base: lines
        dash: [1]
    geologic_units:
        base: polygons
        lighting: false
    geologic_unit_borders:
        base: lines
        blend: overlay
        lighting: false
    hillshade:
        base: polygons
        lighting: false
        raster: normal
        blend: translucent
        shaders:
            uniforms:
                u_envmap: images/draw-test10.jpg
                u_contrast: 1.
                # u_zoom_scale: 1.0
                u_zoom_scale: 3.95
                u_brightness_base: 0.5
                u_brightness_scaler: 0.5
            blocks:
                global: |
                    // Simplified view-independent environment map
                    vec4 applyEnvmap (in sampler2D _tex, in vec3 _normal, in float scale) {
                        _normal.z *= scale;
                        return texture2D(_tex, .5*(normalize(_normal).xy + 1.));
                    }
                color: |
                    // turn terrain exaggeration up/down
                    // fade out spheremap normals with a function
                    float scale1 = 20./(u_map_position.z + 1.0) + 1.5;
                    float m = u_zoom_scale * (u_map_position.z + 0.4) * exp(u_map_position.z * -.29);
                    m = clamp(m, 0., 1.5);
                    color = applyEnvmap(u_envmap, normal, 1./scale1);

                    // apply contrast and brightness
                    float contrast = m;
                    color.rgb = ((color.rgb - 0.5) * max(contrast, 0.)) + 0.5;
                    float brightness = u_brightness_base - m * u_brightness_scaler;
                    color.rgb += brightness;
                    color.a = 0.3;
